
use Test::More qw/no_plan/;
use Egg::Helper;
use lib qw{ /home/perl/lib };
my $t= Egg::Helper->run('O:Test');
my $start_dir= $t->global->{start_dir};

my $schema_name= 'Schema';

my $dsn  = 'dbi:Pg:dbname=dbname';
my $host = 'localhost';
my $port = '5432';
my $user = 'db_user';
my $psswd= 'db_passwd';

$t->prepare(
  controller=> { egg=> [qw/DBIC::Method/] },
  extend_lib=> "/home/lib $start_dir/lib $start_dir/../lib",
  config=> { MODEL=> [ [ 'DBIC' => { schema_names => [$schema_name] } ] ] },
  );

my $perl_path= $t->perl_path;
my $proot = $t->project_root;
my $pname = $t->project_name;
my $lcname= lc($pname);
my $lcschema= lc($schema_name);

my $command_line=
    "$perl_path $lcname\_helper.pl M:DBIC $schema_name"
  . " -d $dsn -s $host -i $port -u $user -p $psswd";

chdir("$proot/bin");
ok( ! system($command_line) );
chdir($start_dir);

ok( -e "$proot/lib/$pname/Model/DBIC/$schema_name" );
ok( -e "$proot/lib/$pname/Model/DBIC/$schema_name.pm" );

my $method;
ok( my $e= $t->egg_virtual );
ok( $e->prepare_component );
   $method= "$lcschema\_schema";
is $e->model($lcschema), $e->$method;
   $method= "$lcschema\_dbh";
is $e->model($lcschema)->storage->dbh, $e->$method;

